import * as t from 'io-ts'

// https://github.com/gcanti/io-ts/issues/216#issuecomment-621588750
export function fromEnum<EnumType extends string>(
  enumName: string,
  theEnum: Record<string, EnumType>,
): t.Type<EnumType, EnumType, unknown> {
  const isEnumValue = (input: unknown): input is EnumType =>
    Object.values<unknown>(theEnum).includes(input)

  return new t.Type<EnumType>(
    enumName,
    isEnumValue,
    (input, context) =>
      isEnumValue(input) ? t.success(input) : t.failure(input, context),
    t.identity,
  )
}

export const SystemErrorCodes = {
  E2BIG: 'E2BIG',
  EACCES: 'EACCES',
  EADDRINUSE: 'EADDRINUSE',
  EADDRNOTAVAIL: 'EADDRNOTAVAIL',
  EAFNOSUPPORT: 'EAFNOSUPPORT',
  EAGAIN: 'EAGAIN',
  EALREADY: 'EALREADY',
  EBADE: 'EBADE',
  EBADF: 'EBADF',
  EBADFD: 'EBADFD',
  EBADMSG: 'EBADMSG',
  EBADR: 'EBADR',
  EBADRQC: 'EBADRQC',
  EBADSLT: 'EBADSLT',
  EBUSY: 'EBUSY',
  ECANCELED: 'ECANCELED',
  ECHILD: 'ECHILD',
  ECHRNG: 'ECHRNG',
  ECOMM: 'ECOMM',
  ECONNABORTED: 'ECONNABORTED',
  ECONNREFUSED: 'ECONNREFUSED',
  ECONNRESET: 'ECONNRESET',
  EDEADLK: 'EDEADLK',
  EDEADLOCK: 'EDEADLOCK',
  EDESTADDRREQ: 'EDESTADDRREQ',
  EDOM: 'EDOM',
  EDQUOT: 'EDQUOT',
  EEXIST: 'EEXIST',
  EFAULT: 'EFAULT',
  EFBIG: 'EFBIG',
  EHOSTDOWN: 'EHOSTDOWN',
  EHOSTUNREACH: 'EHOSTUNREACH',
  EHWPOISON: 'EHWPOISON',
  EIDRM: 'EIDRM',
  EILSEQ: 'EILSEQ',
  EINPROGRESS: 'EINPROGRESS',
  EINTR: 'EINTR',
  EINVAL: 'EINVAL',
  EIO: 'EIO',
  EISCONN: 'EISCONN',
  EISDIR: 'EISDIR',
  EISNAM: 'EISNAM',
  EKEYEXPIRED: 'EKEYEXPIRED',
  EKEYREJECTED: 'EKEYREJECTED',
  EKEYREVOKED: 'EKEYREVOKED',
  EL2HLT: 'EL2HLT',
  EL2NSYNC: 'EL2NSYNC',
  EL3HLT: 'EL3HLT',
  EL3RST: 'EL3RST',
  ELIBACC: 'ELIBACC',
  ELIBBAD: 'ELIBBAD',
  ELIBMAX: 'ELIBMAX',
  ELIBSCN: 'ELIBSCN',
  ELIBEXEC: 'ELIBEXEC',
  ELNRANGE: 'ELNRANGE',
  ELOOP: 'ELOOP',
  EMEDIUMTYPE: 'EMEDIUMTYPE',
  EMFILE: 'EMFILE',
  EMLINK: 'EMLINK',
  EMSGSIZE: 'EMSGSIZE',
  EMULTIHOP: 'EMULTIHOP',
  ENAMETOOLONG: 'ENAMETOOLONG',
  ENETDOWN: 'ENETDOWN',
  ENETRESET: 'ENETRESET',
  ENETUNREACH: 'ENETUNREACH',
  ENFILE: 'ENFILE',
  ENOANO: 'ENOANO',
  ENOBUFS: 'ENOBUFS',
  ENODATA: 'ENODATA',
  ENODEV: 'ENODEV',
  ENOENT: 'ENOENT',
  ENOEXEC: 'ENOEXEC',
  ENOKEY: 'ENOKEY',
  ENOLCK: 'ENOLCK',
  ENOLINK: 'ENOLINK',
  ENOMEDIUM: 'ENOMEDIUM',
  ENOMEM: 'ENOMEM',
  ENOMSG: 'ENOMSG',
  ENONET: 'ENONET',
  ENOPKG: 'ENOPKG',
  ENOPROTOOPT: 'ENOPROTOOPT',
  ENOSPC: 'ENOSPC',
  ENOSR: 'ENOSR',
  ENOSTR: 'ENOSTR',
  ENOSYS: 'ENOSYS',
  ENOTBLK: 'ENOTBLK',
  ENOTCONN: 'ENOTCONN',
  ENOTDIR: 'ENOTDIR',
  ENOTEMPTY: 'ENOTEMPTY',
  ENOTRECOVERABL: 'ENOTRECOVERABL',
  ENOTSOCK: 'ENOTSOCK',
  ENOTSUP: 'ENOTSUP',
  ENOTTY: 'ENOTTY',
  ENOTUNIQ: 'ENOTUNIQ',
  ENXIO: 'ENXIO',
  EOPNOTSUPP: 'EOPNOTSUPP',
  EOVERFLOW: 'EOVERFLOW',
  EOWNERDEAD: 'EOWNERDEAD',
  EPERM: 'EPERM',
  EPFNOSUPPORT: 'EPFNOSUPPORT',
  EPIPE: 'EPIPE',
  EPROTO: 'EPROTO',
  EPROTONOSUPPOR: 'EPROTONOSUPPOR',
  EPROTOTYPE: 'EPROTOTYPE',
  ERANGE: 'ERANGE',
  EREMCHG: 'EREMCHG',
  EREMOTE: 'EREMOTE',
  EREMOTEIO: 'EREMOTEIO',
  ERESTART: 'ERESTART',
  ERFKILL: 'ERFKILL',
  EROFS: 'EROFS',
  ESHUTDOWN: 'ESHUTDOWN',
  ESPIPE: 'ESPIPE',
  ESOCKTNOSUPPOR: 'ESOCKTNOSUPPOR',
  ESRCH: 'ESRCH',
  ESTALE: 'ESTALE',
  ESTRPIPE: 'ESTRPIPE',
  ETIME: 'ETIME',
  ETIMEDOUT: 'ETIMEDOUT',
  ETOOMANYREFS: 'ETOOMANYREFS',
  ETXTBSY: 'ETXTBSY',
  EUCLEAN: 'EUCLEAN',
  EUNATCH: 'EUNATCH',
  EUSERS: 'EUSERS',
  EWOULDBLOCK: 'EWOULDBLOCK',
  EXDEV: 'EXDEV',
  EXFULL: 'EXFULL',
} as const
export type SystemErrorCodes = typeof SystemErrorCodes[keyof typeof SystemErrorCodes]

export const SystemError = t.intersection([
  t.type({
    code: fromEnum('SystemErrorCodes', SystemErrorCodes),
    errno: t.number,
    message: t.string,
    syscall: t.string,
  }),
  t.partial({
    address: t.string,
    dest: t.string,
    info: t.object,
    path: t.string,
    port: t.number,
  }),
])
export type SystemError = t.TypeOf<typeof SystemError>
